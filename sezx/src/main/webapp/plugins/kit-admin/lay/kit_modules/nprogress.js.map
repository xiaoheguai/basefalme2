{"version":3,"sources":["nprogress.js"],"names":["layui","define","exports","root","factory","this","initial","current","NProgress","Settings","settings","version","easing","minimum","positionUsing","speed","trickle","trickleRate","trickleSpeed","showSpinner","barSelector","n","min","max","toBarPerc","configure","options","key","value","undefined","hasOwnProperty","status","set","started","isStarted","clamp","progress","queue","next","getPositioningCSS","css","ease","barCSS","transform","margin-left","opacity","transition","setTimeout","offsetWidth","remove","start","work","done","force","inc","Math","random","amount","$promise","state","render","fromStart","isRendered","document","getElementById","addClass","documentElement","id","createElement","perc","innerHTML","querySelector","template","bar","spinner","spinnerSelector","parent","body","appendChild","removeClass","style","vendorPrefix","bodyStyle","pending","fn","shift","length","push","cssProps","cssPrefixes","camelCase","getStyleProp","name","replace","match","letter","toUpperCase","i","vendorName","capName","charAt","slice","getVendorProp","element","prop","properties","args","arguments","applyCss","hasClass","indexOf","classList","newList","oldList","className","substring","removeElement","parentNode","removeChild","amd","_typeof","module"],"mappings":"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","file":"nprogress.js","sourcesContent":["/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\nlayui.define(function (exports) {\n    (function (root, factory) {\n\n        if (typeof define === 'function' && define.amd) {\n            define(factory);\n        } else if (typeof exports === 'object') {\n            module.exports = factory();\n        } else {\n            root.NProgress = factory();\n        }\n\n    })(this, function () {\n        var NProgress = {};\n\n        NProgress.version = '0.2.0';\n\n        var Settings = NProgress.settings = {\n            minimum: 0.08,\n            easing: 'ease',\n            positionUsing: '',\n            speed: 200,\n            trickle: true,\n            trickleRate: 0.02,\n            trickleSpeed: 800,\n            showSpinner: true,\n            barSelector: '[role=\"bar\"]',\n            spinnerSelector: '[role=\"spinner\"]',\n            parent: 'body',\n            template: '<div class=\"bar\" role=\"bar\"><div class=\"peg\"></div></div><div class=\"spinner\" role=\"spinner\"><div class=\"spinner-icon\"></div></div>'\n        };\n\n        /**\n         * Updates configuration.\n         *\n         *     NProgress.configure({\n         *       minimum: 0.1\n         *     });\n         */\n        NProgress.configure = function (options) {\n            var key, value;\n            for (key in options) {\n                value = options[key];\n                if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\n            }\n\n            return this;\n        };\n\n        /**\n         * Last number.\n         */\n\n        NProgress.status = null;\n\n        /**\n         * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n         *\n         *     NProgress.set(0.4);\n         *     NProgress.set(1.0);\n         */\n\n        NProgress.set = function (n) {\n            var started = NProgress.isStarted();\n\n            n = clamp(n, Settings.minimum, 1);\n            NProgress.status = (n === 1 ? null : n);\n\n            var progress = NProgress.render(!started),\n                bar = progress.querySelector(Settings.barSelector),\n                speed = Settings.speed,\n                ease = Settings.easing;\n\n            progress.offsetWidth; /* Repaint */\n\n            queue(function (next) {\n                // Set positionUsing if it hasn't already been set\n                if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\n\n                // Add transition\n                css(bar, barPositionCSS(n, speed, ease));\n\n                if (n === 1) {\n                    // Fade out\n                    css(progress, {\n                        transition: 'none',\n                        opacity: 1\n                    });\n                    progress.offsetWidth; /* Repaint */\n\n                    setTimeout(function () {\n                        css(progress, {\n                            transition: 'all ' + speed + 'ms linear',\n                            opacity: 0\n                        });\n                        setTimeout(function () {\n                            NProgress.remove();\n                            next();\n                        }, speed);\n                    }, speed);\n                } else {\n                    setTimeout(next, speed);\n                }\n            });\n\n            return this;\n        };\n\n        NProgress.isStarted = function () {\n            return typeof NProgress.status === 'number';\n        };\n\n        /**\n         * Shows the progress bar.\n         * This is the same as setting the status to 0%, except that it doesn't go backwards.\n         *\n         *     NProgress.start();\n         *\n         */\n        NProgress.start = function () {\n            if (!NProgress.status) NProgress.set(0);\n\n            var work = function () {\n                setTimeout(function () {\n                    if (!NProgress.status) return;\n                    NProgress.trickle();\n                    work();\n                }, Settings.trickleSpeed);\n            };\n\n            if (Settings.trickle) work();\n\n            return this;\n        };\n\n        /**\n         * Hides the progress bar.\n         * This is the *sort of* the same as setting the status to 100%, with the\n         * difference being `done()` makes some placebo effect of some realistic motion.\n         *\n         *     NProgress.done();\n         *\n         * If `true` is passed, it will show the progress bar even if its hidden.\n         *\n         *     NProgress.done(true);\n         */\n\n        NProgress.done = function (force) {\n            if (!force && !NProgress.status) return this;\n\n            return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\n        };\n\n        /**\n         * Increments by a random amount.\n         */\n\n        NProgress.inc = function (amount) {\n            var n = NProgress.status;\n\n            if (!n) {\n                return NProgress.start();\n            } else {\n                if (typeof amount !== 'number') {\n                    amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\n                }\n\n                n = clamp(n + amount, 0, 0.994);\n                return NProgress.set(n);\n            }\n        };\n\n        NProgress.trickle = function () {\n            return NProgress.inc(Math.random() * Settings.trickleRate);\n        };\n\n        /**\n         * Waits for all supplied jQuery promises and\n         * increases the progress as the promises resolve.\n         *\n         * @param $promise jQUery Promise\n         */\n        (function () {\n            var initial = 0,\n                current = 0;\n\n            NProgress.promise = function ($promise) {\n                if (!$promise || $promise.state() === \"resolved\") {\n                    return this;\n                }\n\n                if (current === 0) {\n                    NProgress.start();\n                }\n\n                initial++;\n                current++;\n\n                $promise.always(function () {\n                    current--;\n                    if (current === 0) {\n                        initial = 0;\n                        NProgress.done();\n                    } else {\n                        NProgress.set((initial - current) / initial);\n                    }\n                });\n\n                return this;\n            };\n\n        })();\n\n        /**\n         * (Internal) renders the progress bar markup based on the `template`\n         * setting.\n         */\n\n        NProgress.render = function (fromStart) {\n            if (NProgress.isRendered()) return document.getElementById('nprogress');\n\n            addClass(document.documentElement, 'nprogress-busy');\n\n            var progress = document.createElement('div');\n            progress.id = 'nprogress';\n            progress.innerHTML = Settings.template;\n\n            var bar = progress.querySelector(Settings.barSelector),\n                perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\n                parent = document.querySelector(Settings.parent),\n                spinner;\n\n            css(bar, {\n                transition: 'all 0 linear',\n                transform: 'translate3d(' + perc + '%,0,0)'\n            });\n\n            if (!Settings.showSpinner) {\n                spinner = progress.querySelector(Settings.spinnerSelector);\n                spinner && removeElement(spinner);\n            }\n\n            if (parent != document.body) {\n                addClass(parent, 'nprogress-custom-parent');\n            }\n\n            parent.appendChild(progress);\n            return progress;\n        };\n\n        /**\n         * Removes the element. Opposite of render().\n         */\n\n        NProgress.remove = function () {\n            removeClass(document.documentElement, 'nprogress-busy');\n            removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\n            var progress = document.getElementById('nprogress');\n            progress && removeElement(progress);\n        };\n\n        /**\n         * Checks if the progress bar is rendered.\n         */\n\n        NProgress.isRendered = function () {\n            return !!document.getElementById('nprogress');\n        };\n\n        /**\n         * Determine which positioning CSS rule to use.\n         */\n\n        NProgress.getPositioningCSS = function () {\n            // Sniff on document.body.style\n            var bodyStyle = document.body.style;\n\n            // Sniff prefixes\n            var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\n                ('MozTransform' in bodyStyle) ? 'Moz' :\n                    ('msTransform' in bodyStyle) ? 'ms' :\n                        ('OTransform' in bodyStyle) ? 'O' : '';\n\n            if (vendorPrefix + 'Perspective' in bodyStyle) {\n                // Modern browsers with 3D support, e.g. Webkit, IE10\n                return 'translate3d';\n            } else if (vendorPrefix + 'Transform' in bodyStyle) {\n                // Browsers without 3D support, e.g. IE9\n                return 'translate';\n            } else {\n                // Browsers without translate() support, e.g. IE7-8\n                return 'margin';\n            }\n        };\n\n        /**\n         * Helpers\n         */\n\n        function clamp(n, min, max) {\n            if (n < min) return min;\n            if (n > max) return max;\n            return n;\n        }\n\n        /**\n         * (Internal) converts a percentage (`0..1`) to a bar translateX\n         * percentage (`-100%..0%`).\n         */\n\n        function toBarPerc(n) {\n            return (-1 + n) * 100;\n        }\n\n\n        /**\n         * (Internal) returns the correct CSS for changing the bar's\n         * position given an n percentage, and speed and ease from Settings\n         */\n\n        function barPositionCSS(n, speed, ease) {\n            var barCSS;\n\n            if (Settings.positionUsing === 'translate3d') {\n                barCSS = { transform: 'translate3d(' + toBarPerc(n) + '%,0,0)' };\n            } else if (Settings.positionUsing === 'translate') {\n                barCSS = { transform: 'translate(' + toBarPerc(n) + '%,0)' };\n            } else {\n                barCSS = { 'margin-left': toBarPerc(n) + '%' };\n            }\n\n            barCSS.transition = 'all ' + speed + 'ms ' + ease;\n\n            return barCSS;\n        }\n\n        /**\n         * (Internal) Queues a function to be executed.\n         */\n\n        var queue = (function () {\n            var pending = [];\n\n            function next() {\n                var fn = pending.shift();\n                if (fn) {\n                    fn(next);\n                }\n            }\n\n            return function (fn) {\n                pending.push(fn);\n                if (pending.length == 1) next();\n            };\n        })();\n\n        /**\n         * (Internal) Applies css properties to an element, similar to the jQuery \n         * css method.\n         *\n         * While this helper does assist with vendor prefixed property names, it \n         * does not perform any manipulation of values prior to setting styles.\n         */\n\n        var css = (function () {\n            var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],\n                cssProps = {};\n\n            function camelCase(string) {\n                return string.replace(/^-ms-/, 'ms-').replace(/-([\\da-z])/gi, function (match, letter) {\n                    return letter.toUpperCase();\n                });\n            }\n\n            function getVendorProp(name) {\n                var style = document.body.style;\n                if (name in style) return name;\n\n                var i = cssPrefixes.length,\n                    capName = name.charAt(0).toUpperCase() + name.slice(1),\n                    vendorName;\n                while (i--) {\n                    vendorName = cssPrefixes[i] + capName;\n                    if (vendorName in style) return vendorName;\n                }\n\n                return name;\n            }\n\n            function getStyleProp(name) {\n                name = camelCase(name);\n                return cssProps[name] || (cssProps[name] = getVendorProp(name));\n            }\n\n            function applyCss(element, prop, value) {\n                prop = getStyleProp(prop);\n                element.style[prop] = value;\n            }\n\n            return function (element, properties) {\n                var args = arguments,\n                    prop,\n                    value;\n\n                if (args.length == 2) {\n                    for (prop in properties) {\n                        value = properties[prop];\n                        if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\n                    }\n                } else {\n                    applyCss(element, args[1], args[2]);\n                }\n            }\n        })();\n\n        /**\n         * (Internal) Determines if an element or space separated list of class names contains a class name.\n         */\n\n        function hasClass(element, name) {\n            var list = typeof element == 'string' ? element : classList(element);\n            return list.indexOf(' ' + name + ' ') >= 0;\n        }\n\n        /**\n         * (Internal) Adds a class to an element.\n         */\n\n        function addClass(element, name) {\n            var oldList = classList(element),\n                newList = oldList + name;\n\n            if (hasClass(oldList, name)) return;\n\n            // Trim the opening space.\n            element.className = newList.substring(1);\n        }\n\n        /**\n         * (Internal) Removes a class from an element.\n         */\n\n        function removeClass(element, name) {\n            var oldList = classList(element),\n                newList;\n\n            if (!hasClass(element, name)) return;\n\n            // Replace the class name.\n            newList = oldList.replace(' ' + name + ' ', ' ');\n\n            // Trim the opening and closing spaces.\n            element.className = newList.substring(1, newList.length - 1);\n        }\n\n        /**\n         * (Internal) Gets a space separated list of the class names on the element. \n         * The list is wrapped with a single space on each end to facilitate finding \n         * matches within the list.\n         */\n\n        function classList(element) {\n            return (' ' + (element.className || '') + ' ').replace(/\\s+/gi, ' ');\n        }\n\n        /**\n         * (Internal) Removes an element from the DOM.\n         */\n\n        function removeElement(element) {\n            element && element.parentNode && element.parentNode.removeChild(element);\n        }\n\n        return NProgress;\n    });\n\n    // layui.link(kitconfig.resourcePath + 'css/nprogress.css');\n    exports('nprogress');\n});"]}